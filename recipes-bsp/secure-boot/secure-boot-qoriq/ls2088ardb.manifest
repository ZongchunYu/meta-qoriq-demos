# [general]
machine=ls2088ardb
nor_base_addr=0x584000000

# [firmware_images]
rcw_nor=rcw/ls2088ardb/FFFFFFFF_PP_HH_0x2a_0x41/PBL_0x2a_0x41_1800_700_1866_1600.bin
rcw_nor_sec=rcw/ls2088ardb/FFFFFFFF_PP_HH_0x2a_0x41/PBL_0x2a_0x41_1800_700_1866_1600_sec.bin
rcw_qspi=rcw/ls2088ardb/FFFFFFFF_PP_HH_0x2a_0x41/PBL_0x2a_0x41_2000_800_2133_1600_QSPIboot.bin
rcw_qspi_sec=rcw/ls2088ardb/FFFFFFFF_PP_HH_0x2a_0x41/PBL_0x2a_0x41_2000_800_2133_1600_QSPIboot_sec.bin
uboot_norboot=uboot_ls2080ardb.bin
uboot_norboot_sec=u-boot.bin-secure-boot
uboot_qspiboot=uboot_ls2088ardb_qspi.bin
uboot_qspiboot_sec=u-boot.bin-qspi-secure-boot 
uboot_sdboot=null
uboot_sdboot_sec=null
ppa=ppa.itb
dpaa2_mc_fw=mc_app/mc.itb
dpaa2_mc_dpc=dpl-examples/dpc-bman-4M.0x2A_0x41.dtb
dpaa2_mc_dpl=dpl-examples/dpl-eth.0x2A_0x41.dtb

# [linux, dtb, rfs]
kernel_img=Image
kernel_uimg=uImage
device_tree=fsl-ls2088a-rdb.dtb
kernel_itb=itbImage

# [distro autoboot script]
#uboot_scr=build/firmware/u-boot/ls2088ardb/ls2088ardb_boot.scr
uboot_scr=ls2088ardb_boot.scr
bootscript_dec=ls2088ardb_dec_boot.scr

securevalidate="setenv secureboot_validate 'load \$devtype \$devnum:2 \$kernelheader_addr_r /secboot_hdrs/ls2088ardb/hdr_linux.out; load \$devtype \$devnum:2 \$fdtheader_addr_r /secboot_hdrs/ls2088ardb/hdr_dtb.out; esbc_validate \$kernelheader_addr_r; esbc_validate \$fdtheader_addr_r'"

securevalidate_enc="setenv secureboot_validate 'load \$devtype \$devnum:2 \$kernelheader_addr_r /secboot_hdrs/ls2088ardb/hdr_linux.out; esbc_validate \$kernelheader_addr_r;load \$devtype \$devnum:2 \$fdtheader_addr_r /secboot_hdrs/ls2088ardb/hdr_dtb.out; esbc_validate \$fdtheader_addr_r; size \$devtype \$devnum:2 /vmlinuz; echo Encapsulating linux image;setenv key_addr 0x87000000; mw \$key_addr $key_id_1;setexpr \$key_addr \$key_addr + 0x4; mw \$key_addr $key_id_2;setexpr \$key_addr \$key_addr + 0x4; mw \$key_addr $key_id_3;setexpr \$key_addr \$key_addr + 0x4; mw \$key_addr $key_id_4;blob enc \$kernel_addr_r \$load_addr \$filesize \$key_addr; setexpr blobsize \$filesize + 0x30;echo Saving encrypted linux ;save \$devtype \$devnum:2 \$load_addr /vmlinuz \$blobsize;size \$devtype \$devnum:2 /fsl-ls2088a-rdb.dtb;echo Encapsulating dtb image; blob enc \$fdt_addr_r \$load_addr \$filesize \$key_addr; setexpr blobsize \$filesize + 0x30;echo Saving encrypted dtb; save \$devtype \$devnum:2 \$load_addr /fsl-ls2088a-rdb.dtb \$blobsize; size \$devtype \$devnum:2 /ls2088ardb_dec_boot.scr; load \$devtype \$devnum:2 \$load_addr /ls2088ardb_dec_boot.scr; echo replacing Bootscript; save \$devtype \$devnum:2 \$load_addr /ls2088ardb_boot.scr \$filesize;size \$devtype \$devnum:2 /secboot_hdrs/ls2088ardb/hdr_ls2088ardb_bs_dec.out; load \$devtype \$devnum:2 \$load_addr /secboot_hdrs/ls2088ardb/hdr_ls2088ardb_bs_dec.out ;echo Replacing bootscript header; save \$devtype \$devnum:2 \$load_addr /hdr_ls2088ardb_bs.out \$filesize;reset;'"

securevalidate_dec="setenv secureboot_validate 'size \$devtype \$devnum:2 /vmlinuz;setexpr imgsize \$filesize - 0x30 ;echo Decapsulating linux image; setenv key_addr 0x87000000; mw \$key_addr $key_id_1;setexpr \$key_addr \$key_addr + 0x4; mw \$key_addr $key_id_2;setexpr \$key_addr \$key_addr + 0x4; mw \$key_addr $key_id_3;setexpr \$key_addr \$key_addr + 0x4; mw \$key_addr $key_id_4; blob dec \$kernel_addr_r \$load_addr \$imgsize \$key_addr; cp.b \$load_addr \$kernel_addr_r \$filesize ;size \$devtype \$devnum:2 /fsl-ls2088a-rdb.dtb;setexpr imgsize \$filesize - 0x30 ;echo Decapsulating dtb image; blob dec \$fdt_addr_r \$load_addr \$imgsize \$key_addr; cp.b \$load_addr \$fdt_addr_r \$filesize ; '"

distroboot='part uuid $devtype $devnum:3 partuuid3; setenv bootargs console=ttyS1,115200 earlycon=uart8250,mmio,0x21c0600 root=PARTUUID=$partuuid3 rw rootwait default_hugepagesz=2m hugepagesz=2m hugepages=256; load $devtype $devnum:2 $kernel_addr_r /vmlinuz;load $devtype $devnum:2 $fdt_addr_r /fsl-ls2088a-rdb.dtb; env exists secureboot && echo validating secureboot && run secureboot_validate; bootm $kernel_addr_r - $fdt_addr_r'

# [uefi grub config, updated by installer]
uefi_grub_search="search --no-floppy --file /partuuid02 --set root"
uefi_grub_linux="linux  /Image  console=ttyS1,115200 earlycon=uart8250,mmio,0x21c0600 root=PARTUUID=partuuid03 rw rootwait ramdisk_size=0x2000000 default_hugepagesz=2m hugepagesz=2m hugepages=256"


# [secure boot scripts in cst]
nor_script=platforms/ls2088_1088_nor.sh
qspi_script=platforms/ls2088_qspi.sh
